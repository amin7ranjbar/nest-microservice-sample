version: '3.7'

services:
  gateway:
    build: ./gateway
    container_name: gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - backend

  auth:
    build: ./auth
    container_name: auth
    restart: always
    hostname: auth
    env_file:
      - .env
    networks:
      - backend
    links:
      - postgres

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - backend

networks:
  jaeger-example:

volumes:
  rabbitmq_data:
  rabbitmq_log:
  postgres_data:

networks:
  backend:
    driver: bridge
